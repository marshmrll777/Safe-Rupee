import cv2
import numpy as np
import tkinter as tk
from tkinter import filedialog, Label, Button
from PIL import Image, ImageTk

def process_image(image_path):
    # Load the image
    image = cv2.imread(image_path)
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    blurred = cv2.GaussianBlur(gray, (11, 11), 0)

    # Edge detection
    edges = cv2.Canny(blurred, 30, 150)
    contours, _ = cv2.findContours(edges.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    coins = []
    bounding_boxes = []

    for contour in contours:
        if cv2.contourArea(contour) < 50:  # Ignore small areas
            continue
        (x, y, w, h) = cv2.boundingRect(contour)
        coin = image[y:y + h, x:x + w]
        coins.append(coin)
        bounding_boxes.append((x, y, w, h))

    return image, coins, bounding_boxes

def classify_coin(coin):
    # Placeholder for classification logic
    # Analyze the entire coin's properties
    gray_coin = cv2.cvtColor(coin, cv2.COLOR_BGR2GRAY)
    avg_brightness = np.mean(gray_coin)
    return "Real" if avg_brightness > 150 else "Fake"

def detect_coins(file_path):
    original_image, coins, bounding_boxes = process_image(file_path)

    # Draw contours and classify coins
    for i, coin in enumerate(coins):
        classification = classify_coin(coin)
        (x, y, w, h) = bounding_boxes[i]
        color = (0, 255, 0) if classification == "Real" else (0, 0, 255)
        cv2.rectangle(original_image, (x, y), (x + w, y + h), color, 2)
        cv2.putText(original_image, classification, (x, y - 10),
                    cv2.FONT_HERSHEY_SIMPLEX, 0.6, color, 2)

    # Display original image with detected and classified coins
    cv2.imshow("Detected Coins", original_image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

def upload_image():
    file_path = filedialog.askopenfilename()
    if file_path:
        detect_coins(file_path)

# Create a simple Tkinter GUI
root = tk.Tk()
root.title("Coin Detection System")

label = Label(root, text="Click 'Upload Image' to detect coins and classify them as real or fake.")
label.pack()

upload_button = Button(root, text="Upload Image", command=upload_image)
upload_button.pack()

root.mainloop()
